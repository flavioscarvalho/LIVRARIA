name: Python Pull Request Workflow

on: [pull_request]

jobs:
  qa:
    name: Quality check
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: bookstore_dev_db
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
        options: >-
          --health-cmd "pg_isready -U bookstore_dev -d bookstore_dev_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Ajuste adicionado: mapeamento da porta do PostgreSQL
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install poetry==1.8.4
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: View Poetry --help
        run: poetry --help

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Wait for PostgreSQL to be ready
        # Ajuste adicionado: aguarda a inicialização completa do banco de dados antes de executar os testes
        run: |
          until pg_isready -h localhost -U bookstore_dev -d bookstore_dev_db; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 3
          done

      - name: Run Tests
        env:
          DEBUG: 1
          SECRET_KEY: foo
          DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1,[::1]
          DATABASE_URL: postgres://bookstore_dev:bookstore_dev@localhost:5432/bookstore_dev_db
        run: |
          poetry run python manage.py test

      - name: Wemake Python Styleguide
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
